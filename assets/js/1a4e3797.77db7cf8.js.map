{"version":3,"file":"assets/js/1a4e3797.77db7cf8.js","mappings":"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","sources":["webpack://website/../node_modules/@docusaurus/theme-common/src/utils/usePluralForm.ts","webpack://website/../node_modules/@docusaurus/theme-search-algolia/lib/theme/SearchPage/styles.module.css","webpack://website/../node_modules/@docusaurus/theme-search-algolia/lib/theme/SearchPage/index.js","webpack://website/../node_modules/@algolia/events/events.js","webpack://website/../node_modules/algoliasearch-helper/index.js","webpack://website/../node_modules/algoliasearch-helper/src/DerivedHelper/index.js","webpack://website/../node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","webpack://website/../node_modules/algoliasearch-helper/src/SearchParameters/index.js","webpack://website/../node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","webpack://website/../node_modules/algoliasearch-helper/src/SearchResults/index.js","webpack://website/../node_modules/algoliasearch-helper/src/algoliasearch.helper.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/compact.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/defaultsPure.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/escapeFacetValue.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/find.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/findIndex.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/formatSort.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/inherits.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/intersection.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/merge.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/omit.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/orderBy.js","webpack://website/../node_modules/algoliasearch-helper/src/functions/valToNumber.js","webpack://website/../node_modules/algoliasearch-helper/src/requestBuilder.js","webpack://website/../node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","webpack://website/../node_modules/algoliasearch-helper/src/version.js","webpack://website/../node_modules/algoliasearch/dist/algoliasearch-lite.umd.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {useMemo} from 'react';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\n\n// We want to ensurer a stable plural form order in all cases\n// It is more convenient and natural to handle \"small values\" first\n// See https://twitter.com/sebastienlorber/status/1366820663261077510\nconst OrderedPluralForms: Intl.LDMLPluralRule[] = [\n  'zero',\n  'one',\n  'two',\n  'few',\n  'many',\n  'other',\n];\nfunction sortPluralForms(\n  pluralForms: Intl.LDMLPluralRule[],\n): Intl.LDMLPluralRule[] {\n  return OrderedPluralForms.filter((pf) => pluralForms.includes(pf));\n}\n\ntype LocalePluralForms = {\n  locale: string;\n  pluralForms: Intl.LDMLPluralRule[];\n  select: (count: number) => Intl.LDMLPluralRule;\n};\n\n// Hardcoded english/fallback implementation\nconst EnglishPluralForms: LocalePluralForms = {\n  locale: 'en',\n  pluralForms: sortPluralForms(['one', 'other']),\n  select: (count) => (count === 1 ? 'one' : 'other'),\n};\n\nfunction createLocalePluralForms(locale: string): LocalePluralForms {\n  const pluralRules = new Intl.PluralRules(locale);\n  return {\n    locale,\n    pluralForms: sortPluralForms(\n      pluralRules.resolvedOptions().pluralCategories,\n    ),\n    select: (count) => pluralRules.select(count),\n  };\n}\n\n/**\n * Poor man's `PluralSelector` implementation, using an English fallback. We\n * want a lightweight, future-proof and good-enough solution. We don't want a\n * perfect and heavy solution.\n *\n * Docusaurus classic theme has only 2 deeply nested labels requiring complex\n * plural rules. We don't want to use `Intl` + `PluralRules` polyfills + full\n * ICU syntax (react-intl) just for that.\n *\n * Notes:\n * - 2021: 92+% Browsers support `Intl.PluralRules`, and support will increase\n * in the future\n * - NodeJS >= 13 has full ICU support by default\n * - In case of \"mismatch\" between SSR and Browser ICU support, React keeps\n * working!\n */\nfunction useLocalePluralForms(): LocalePluralForms {\n  const {\n    i18n: {currentLocale},\n  } = useDocusaurusContext();\n  return useMemo(() => {\n    try {\n      return createLocalePluralForms(currentLocale);\n    } catch (err) {\n      console.error(`Failed to use Intl.PluralRules for locale \"${currentLocale}\".\nDocusaurus will fallback to the default (English) implementation.\nError: ${(err as Error).message}\n`);\n      return EnglishPluralForms;\n    }\n  }, [currentLocale]);\n}\n\nfunction selectPluralMessage(\n  pluralMessages: string,\n  count: number,\n  localePluralForms: LocalePluralForms,\n): string {\n  const separator = '|';\n  const parts = pluralMessages.split(separator);\n\n  if (parts.length === 1) {\n    return parts[0]!;\n  }\n  if (parts.length > localePluralForms.pluralForms.length) {\n    console.error(\n      `For locale=${localePluralForms.locale}, a maximum of ${\n        localePluralForms.pluralForms.length\n      } plural forms are expected (${localePluralForms.pluralForms.join(\n        ',',\n      )}), but the message contains ${parts.length}: ${pluralMessages}`,\n    );\n  }\n  const pluralForm = localePluralForms.select(count);\n  const pluralFormIndex = localePluralForms.pluralForms.indexOf(pluralForm);\n  // In case of not enough plural form messages, we take the last one (other)\n  // instead of returning undefined\n  return parts[Math.min(pluralFormIndex, parts.length - 1)]!;\n}\n\n/**\n * Reads the current locale and returns an interface very similar to\n * `Intl.PluralRules`.\n */\nexport function usePluralForm(): {\n  /**\n   * Give it a `count` and it will select the relevant message from\n   * `pluralMessages`. `pluralMessages` should be separated by `|`, and in the\n   * order of \"zero\", \"one\", \"two\", \"few\", \"many\", \"other\". The actual selection\n   * is done by `Intl.PluralRules`, which tells us all plurals the locale has\n   * and which plural we should use for `count`.\n   */\n  selectMessage: (count: number, pluralMessages: string) => string;\n} {\n  const localePluralForm = useLocalePluralForms();\n  return {\n    selectMessage: (count: number, pluralMessages: string): string =>\n      selectPluralMessage(pluralMessages, count, localePluralForm),\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"searchQueryInput\":\"searchQueryInput_RVvj\",\"searchVersionInput\":\"searchVersionInput_QmSs\",\"searchResultsColumn\":\"searchResultsColumn_Vh0c\",\"algoliaLogo\":\"algoliaLogo_yiAH\",\"algoliaLogoPathFill\":\"algoliaLogoPathFill_tzCx\",\"searchResultItem\":\"searchResultItem_q31K\",\"searchResultItemHeading\":\"searchResultItemHeading_Iq68\",\"searchResultItemPath\":\"searchResultItemPath_pr04\",\"searchResultItemSummary\":\"searchResultItemSummary_fqhL\",\"searchQueryColumn\":\"searchQueryColumn_YWTO\",\"searchVersionColumn\":\"searchVersionColumn_pdNL\",\"searchLogoColumn\":\"searchLogoColumn_ugtA\",\"loadingSpinner\":\"loadingSpinner_hU64\",\"loading-spin\":\"loading-spin_xBR4\",\"loader\":\"loader_DZsO\"};","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/* eslint-disable jsx-a11y/no-autofocus */\nimport React, {useEffect, useState, useReducer, useRef} from 'react';\nimport clsx from 'clsx';\nimport algoliaSearch from 'algoliasearch/lite';\nimport algoliaSearchHelper from 'algoliasearch-helper';\nimport Head from '@docusaurus/Head';\nimport Link from '@docusaurus/Link';\nimport ExecutionEnvironment from '@docusaurus/ExecutionEnvironment';\nimport {\n  HtmlClassNameProvider,\n  usePluralForm,\n  isRegexpStringMatch,\n  useEvent,\n} from '@docusaurus/theme-common';\nimport {\n  useTitleFormatter,\n  useSearchPage,\n} from '@docusaurus/theme-common/internal';\nimport useDocusaurusContext from '@docusaurus/useDocusaurusContext';\nimport {useAllDocsData} from '@docusaurus/plugin-content-docs/client';\nimport Translate, {translate} from '@docusaurus/Translate';\nimport Layout from '@theme/Layout';\nimport styles from './styles.module.css';\n// Very simple pluralization: probably good enough for now\nfunction useDocumentsFoundPlural() {\n  const {selectMessage} = usePluralForm();\n  return (count) =>\n    selectMessage(\n      count,\n      translate(\n        {\n          id: 'theme.SearchPage.documentsFound.plurals',\n          description:\n            'Pluralized label for \"{count} documents found\". Use as much plural forms (separated by \"|\") as your language support (see https://www.unicode.org/cldr/cldr-aux/charts/34/supplemental/language_plural_rules.html)',\n          message: 'One document found|{count} documents found',\n        },\n        {count},\n      ),\n    );\n}\nfunction useDocsSearchVersionsHelpers() {\n  const allDocsData = useAllDocsData();\n  // State of the version select menus / algolia facet filters\n  // docsPluginId -> versionName map\n  const [searchVersions, setSearchVersions] = useState(() =>\n    Object.entries(allDocsData).reduce(\n      (acc, [pluginId, pluginData]) => ({\n        ...acc,\n        [pluginId]: pluginData.versions[0].name,\n      }),\n      {},\n    ),\n  );\n  // Set the value of a single select menu\n  const setSearchVersion = (pluginId, searchVersion) =>\n    setSearchVersions((s) => ({...s, [pluginId]: searchVersion}));\n  const versioningEnabled = Object.values(allDocsData).some(\n    (docsData) => docsData.versions.length > 1,\n  );\n  return {\n    allDocsData,\n    versioningEnabled,\n    searchVersions,\n    setSearchVersion,\n  };\n}\n// We want to display one select per versioned docs plugin instance\nfunction SearchVersionSelectList({docsSearchVersionsHelpers}) {\n  const versionedPluginEntries = Object.entries(\n    docsSearchVersionsHelpers.allDocsData,\n  )\n    // Do not show a version select for unversioned docs plugin instances\n    .filter(([, docsData]) => docsData.versions.length > 1);\n  return (\n    <div\n      className={clsx(\n        'col',\n        'col--3',\n        'padding-left--none',\n        styles.searchVersionColumn,\n      )}>\n      {versionedPluginEntries.map(([pluginId, docsData]) => {\n        const labelPrefix =\n          versionedPluginEntries.length > 1 ? `${pluginId}: ` : '';\n        return (\n          <select\n            key={pluginId}\n            onChange={(e) =>\n              docsSearchVersionsHelpers.setSearchVersion(\n                pluginId,\n                e.target.value,\n              )\n            }\n            defaultValue={docsSearchVersionsHelpers.searchVersions[pluginId]}\n            className={styles.searchVersionInput}>\n            {docsData.versions.map((version, i) => (\n              <option\n                key={i}\n                label={`${labelPrefix}${version.label}`}\n                value={version.name}\n              />\n            ))}\n          </select>\n        );\n      })}\n    </div>\n  );\n}\nfunction SearchPageContent() {\n  const {\n    siteConfig: {themeConfig},\n    i18n: {currentLocale},\n  } = useDocusaurusContext();\n  const {\n    algolia: {appId, apiKey, indexName, externalUrlRegex},\n  } = themeConfig;\n  const documentsFoundPlural = useDocumentsFoundPlural();\n  const docsSearchVersionsHelpers = useDocsSearchVersionsHelpers();\n  const {searchQuery, setSearchQuery} = useSearchPage();\n  const initialSearchResultState = {\n    items: [],\n    query: null,\n    totalResults: null,\n    totalPages: null,\n    lastPage: null,\n    hasMore: null,\n    loading: null,\n  };\n  const [searchResultState, searchResultStateDispatcher] = useReducer(\n    (prevState, data) => {\n      switch (data.type) {\n        case 'reset': {\n          return initialSearchResultState;\n        }\n        case 'loading': {\n          return {...prevState, loading: true};\n        }\n        case 'update': {\n          if (searchQuery !== data.value.query) {\n            return prevState;\n          }\n          return {\n            ...data.value,\n            items:\n              data.value.lastPage === 0\n                ? data.value.items\n                : prevState.items.concat(data.value.items),\n          };\n        }\n        case 'advance': {\n          const hasMore = prevState.totalPages > prevState.lastPage + 1;\n          return {\n            ...prevState,\n            lastPage: hasMore ? prevState.lastPage + 1 : prevState.lastPage,\n            hasMore,\n          };\n        }\n        default:\n          return prevState;\n      }\n    },\n    initialSearchResultState,\n  );\n  const algoliaClient = algoliaSearch(appId, apiKey);\n  const algoliaHelper = algoliaSearchHelper(algoliaClient, indexName, {\n    hitsPerPage: 15,\n    advancedSyntax: true,\n    disjunctiveFacets: ['language', 'docusaurus_tag'],\n  });\n  algoliaHelper.on(\n    'result',\n    ({results: {query, hits, page, nbHits, nbPages}}) => {\n      if (query === '' || !Array.isArray(hits)) {\n        searchResultStateDispatcher({type: 'reset'});\n        return;\n      }\n      const sanitizeValue = (value) =>\n        value.replace(\n          /algolia-docsearch-suggestion--highlight/g,\n          'search-result-match',\n        );\n      const items = hits.map(\n        ({\n          url,\n          _highlightResult: {hierarchy},\n          _snippetResult: snippet = {},\n        }) => {\n          const parsedURL = new URL(url);\n          const titles = Object.keys(hierarchy).map((key) =>\n            sanitizeValue(hierarchy[key].value),\n          );\n          return {\n            title: titles.pop(),\n            url: isRegexpStringMatch(externalUrlRegex, parsedURL.href)\n              ? parsedURL.href\n              : parsedURL.pathname + parsedURL.hash,\n            summary: snippet.content\n              ? `${sanitizeValue(snippet.content.value)}...`\n              : '',\n            breadcrumbs: titles,\n          };\n        },\n      );\n      searchResultStateDispatcher({\n        type: 'update',\n        value: {\n          items,\n          query,\n          totalResults: nbHits,\n          totalPages: nbPages,\n          lastPage: page,\n          hasMore: nbPages > page + 1,\n          loading: false,\n        },\n      });\n    },\n  );\n  const [loaderRef, setLoaderRef] = useState(null);\n  const prevY = useRef(0);\n  const observer = useRef(\n    ExecutionEnvironment.canUseIntersectionObserver &&\n      new IntersectionObserver(\n        (entries) => {\n          const {\n            isIntersecting,\n            boundingClientRect: {y: currentY},\n          } = entries[0];\n          if (isIntersecting && prevY.current > currentY) {\n            searchResultStateDispatcher({type: 'advance'});\n          }\n          prevY.current = currentY;\n        },\n        {threshold: 1},\n      ),\n  );\n  const getTitle = () =>\n    searchQuery\n      ? translate(\n          {\n            id: 'theme.SearchPage.existingResultsTitle',\n            message: 'Search results for \"{query}\"',\n            description: 'The search page title for non-empty query',\n          },\n          {\n            query: searchQuery,\n          },\n        )\n      : translate({\n          id: 'theme.SearchPage.emptyResultsTitle',\n          message: 'Search the documentation',\n          description: 'The search page title for empty query',\n        });\n  const makeSearch = useEvent((page = 0) => {\n    algoliaHelper.addDisjunctiveFacetRefinement('docusaurus_tag', 'default');\n    algoliaHelper.addDisjunctiveFacetRefinement('language', currentLocale);\n    Object.entries(docsSearchVersionsHelpers.searchVersions).forEach(\n      ([pluginId, searchVersion]) => {\n        algoliaHelper.addDisjunctiveFacetRefinement(\n          'docusaurus_tag',\n          `docs-${pluginId}-${searchVersion}`,\n        );\n      },\n    );\n    algoliaHelper.setQuery(searchQuery).setPage(page).search();\n  });\n  useEffect(() => {\n    if (!loaderRef) {\n      return undefined;\n    }\n    const currentObserver = observer.current;\n    if (currentObserver) {\n      currentObserver.observe(loaderRef);\n      return () => currentObserver.unobserve(loaderRef);\n    }\n    return () => true;\n  }, [loaderRef]);\n  useEffect(() => {\n    searchResultStateDispatcher({type: 'reset'});\n    if (searchQuery) {\n      searchResultStateDispatcher({type: 'loading'});\n      setTimeout(() => {\n        makeSearch();\n      }, 300);\n    }\n  }, [searchQuery, docsSearchVersionsHelpers.searchVersions, makeSearch]);\n  useEffect(() => {\n    if (!searchResultState.lastPage || searchResultState.lastPage === 0) {\n      return;\n    }\n    makeSearch(searchResultState.lastPage);\n  }, [makeSearch, searchResultState.lastPage]);\n  return (\n    <Layout>\n      <Head>\n        <title>{useTitleFormatter(getTitle())}</title>\n        {/*\n         We should not index search pages\n          See https://github.com/facebook/docusaurus/pull/3233\n        */}\n        <meta property=\"robots\" content=\"noindex, follow\" />\n      </Head>\n\n      <div className=\"container margin-vert--lg\">\n        <h1>{getTitle()}</h1>\n\n        <form className=\"row\" onSubmit={(e) => e.preventDefault()}>\n          <div\n            className={clsx('col', styles.searchQueryColumn, {\n              'col--9': docsSearchVersionsHelpers.versioningEnabled,\n              'col--12': !docsSearchVersionsHelpers.versioningEnabled,\n            })}>\n            <input\n              type=\"search\"\n              name=\"q\"\n              className={styles.searchQueryInput}\n              placeholder={translate({\n                id: 'theme.SearchPage.inputPlaceholder',\n                message: 'Type your search here',\n                description: 'The placeholder for search page input',\n              })}\n              aria-label={translate({\n                id: 'theme.SearchPage.inputLabel',\n                message: 'Search',\n                description: 'The ARIA label for search page input',\n              })}\n              onChange={(e) => setSearchQuery(e.target.value)}\n              value={searchQuery}\n              autoComplete=\"off\"\n              autoFocus\n            />\n          </div>\n\n          {docsSearchVersionsHelpers.versioningEnabled && (\n            <SearchVersionSelectList\n              docsSearchVersionsHelpers={docsSearchVersionsHelpers}\n            />\n          )}\n        </form>\n\n        <div className=\"row\">\n          <div className={clsx('col', 'col--8', styles.searchResultsColumn)}>\n            {!!searchResultState.totalResults &&\n              documentsFoundPlural(searchResultState.totalResults)}\n          </div>\n\n          <div\n            className={clsx(\n              'col',\n              'col--4',\n              'text--right',\n              styles.searchLogoColumn,\n            )}>\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://www.algolia.com/\"\n              aria-label={translate({\n                id: 'theme.SearchPage.algoliaLabel',\n                message: 'Search by Algolia',\n                description: 'The ARIA label for Algolia mention',\n              })}>\n              <svg viewBox=\"0 0 168 24\" className={styles.algoliaLogo}>\n                <g fill=\"none\">\n                  <path\n                    className={styles.algoliaLogoPathFill}\n                    d=\"M120.925 18.804c-4.386.02-4.386-3.54-4.386-4.106l-.007-13.336 2.675-.424v13.254c0 .322 0 2.358 1.718 2.364v2.248zm-10.846-2.18c.821 0 1.43-.047 1.855-.129v-2.719a6.334 6.334 0 0 0-1.574-.199 5.7 5.7 0 0 0-.897.069 2.699 2.699 0 0 0-.814.24c-.24.116-.439.28-.582.491-.15.212-.219.335-.219.656 0 .628.219.991.616 1.23s.938.362 1.615.362zm-.233-9.7c.883 0 1.629.109 2.231.328.602.218 1.088.525 1.444.915.363.396.609.922.76 1.483.157.56.232 1.175.232 1.85v6.874a32.5 32.5 0 0 1-1.868.314c-.834.123-1.772.185-2.813.185-.69 0-1.327-.069-1.895-.198a4.001 4.001 0 0 1-1.471-.636 3.085 3.085 0 0 1-.951-1.134c-.226-.465-.343-1.12-.343-1.803 0-.656.13-1.073.384-1.525a3.24 3.24 0 0 1 1.047-1.106c.445-.287.95-.492 1.532-.615a8.8 8.8 0 0 1 1.82-.185 8.404 8.404 0 0 1 1.972.24v-.438c0-.307-.035-.6-.11-.874a1.88 1.88 0 0 0-.384-.73 1.784 1.784 0 0 0-.724-.493 3.164 3.164 0 0 0-1.143-.205c-.616 0-1.177.075-1.69.164a7.735 7.735 0 0 0-1.26.307l-.321-2.192c.335-.117.834-.233 1.478-.349a10.98 10.98 0 0 1 2.073-.178zm52.842 9.626c.822 0 1.43-.048 1.854-.13V13.7a6.347 6.347 0 0 0-1.574-.199c-.294 0-.595.021-.896.069a2.7 2.7 0 0 0-.814.24 1.46 1.46 0 0 0-.582.491c-.15.212-.218.335-.218.656 0 .628.218.991.615 1.23.404.245.938.362 1.615.362zm-.226-9.694c.883 0 1.629.108 2.231.327.602.219 1.088.526 1.444.915.355.39.609.923.759 1.483a6.8 6.8 0 0 1 .233 1.852v6.873c-.41.088-1.034.19-1.868.314-.834.123-1.772.184-2.813.184-.69 0-1.327-.068-1.895-.198a4.001 4.001 0 0 1-1.471-.635 3.085 3.085 0 0 1-.951-1.134c-.226-.465-.343-1.12-.343-1.804 0-.656.13-1.073.384-1.524.26-.45.608-.82 1.047-1.107.445-.286.95-.491 1.532-.614a8.803 8.803 0 0 1 2.751-.13c.329.034.671.096 1.04.185v-.437a3.3 3.3 0 0 0-.109-.875 1.873 1.873 0 0 0-.384-.731 1.784 1.784 0 0 0-.724-.492 3.165 3.165 0 0 0-1.143-.205c-.616 0-1.177.075-1.69.164a7.75 7.75 0 0 0-1.26.307l-.321-2.193c.335-.116.834-.232 1.478-.348a11.633 11.633 0 0 1 2.073-.177zm-8.034-1.271a1.626 1.626 0 0 1-1.628-1.62c0-.895.725-1.62 1.628-1.62.904 0 1.63.725 1.63 1.62 0 .895-.733 1.62-1.63 1.62zm1.348 13.22h-2.689V7.27l2.69-.423v11.956zm-4.714 0c-4.386.02-4.386-3.54-4.386-4.107l-.008-13.336 2.676-.424v13.254c0 .322 0 2.358 1.718 2.364v2.248zm-8.698-5.903c0-1.156-.253-2.119-.746-2.788-.493-.677-1.183-1.01-2.067-1.01-.882 0-1.574.333-2.065 1.01-.493.676-.733 1.632-.733 2.788 0 1.168.246 1.953.74 2.63.492.683 1.183 1.018 2.066 1.018.882 0 1.574-.342 2.067-1.019.492-.683.738-1.46.738-2.63zm2.737-.007c0 .902-.13 1.584-.397 2.33a5.52 5.52 0 0 1-1.128 1.906 4.986 4.986 0 0 1-1.752 1.223c-.685.286-1.739.45-2.265.45-.528-.006-1.574-.157-2.252-.45a5.096 5.096 0 0 1-1.744-1.223c-.487-.527-.863-1.162-1.137-1.906a6.345 6.345 0 0 1-.41-2.33c0-.902.123-1.77.397-2.508a5.554 5.554 0 0 1 1.15-1.892 5.133 5.133 0 0 1 1.75-1.216c.679-.287 1.425-.423 2.232-.423.808 0 1.553.142 2.237.423a4.88 4.88 0 0 1 1.753 1.216 5.644 5.644 0 0 1 1.135 1.892c.287.738.431 1.606.431 2.508zm-20.138 0c0 1.12.246 2.363.738 2.882.493.52 1.13.78 1.91.78.424 0 .828-.062 1.204-.178.377-.116.677-.253.917-.417V9.33a10.476 10.476 0 0 0-1.766-.226c-.971-.028-1.71.37-2.23 1.004-.513.636-.773 1.75-.773 2.788zm7.438 5.274c0 1.824-.466 3.156-1.404 4.004-.936.846-2.367 1.27-4.296 1.27-.705 0-2.17-.137-3.34-.396l.431-2.118c.98.205 2.272.26 2.95.26 1.074 0 1.84-.219 2.299-.656.459-.437.684-1.086.684-1.948v-.437a8.07 8.07 0 0 1-1.047.397c-.43.13-.93.198-1.492.198-.739 0-1.41-.116-2.018-.349a4.206 4.206 0 0 1-1.567-1.025c-.431-.45-.774-1.017-1.013-1.694-.24-.677-.363-1.885-.363-2.773 0-.834.13-1.88.384-2.577.26-.696.629-1.298 1.129-1.796.493-.498 1.095-.881 1.8-1.162a6.605 6.605 0 0 1 2.428-.457c.87 0 1.67.109 2.45.24.78.129 1.444.265 1.985.415V18.17zM6.972 6.677v1.627c-.712-.446-1.52-.67-2.425-.67-.585 0-1.045.13-1.38.391a1.24 1.24 0 0 0-.502 1.03c0 .425.164.765.494 1.02.33.256.835.532 1.516.83.447.192.795.356 1.045.495.25.138.537.332.862.582.324.25.563.548.718.894.154.345.23.741.23 1.188 0 .947-.334 1.691-1.004 2.234-.67.542-1.537.814-2.601.814-1.18 0-2.16-.229-2.936-.686v-1.708c.84.628 1.814.942 2.92.942.585 0 1.048-.136 1.388-.407.34-.271.51-.646.51-1.125 0-.287-.1-.55-.302-.79-.203-.24-.42-.42-.655-.542-.234-.123-.585-.29-1.053-.503a61.27 61.27 0 0 1-.582-.271 13.67 13.67 0 0 1-.55-.287 4.275 4.275 0 0 1-.567-.351 6.92 6.92 0 0 1-.455-.4c-.18-.17-.31-.34-.39-.51-.08-.17-.155-.37-.224-.598a2.553 2.553 0 0 1-.104-.742c0-.915.333-1.638.998-2.17.664-.532 1.523-.798 2.576-.798.968 0 1.793.17 2.473.51zm7.468 5.696v-.287c-.022-.607-.187-1.088-.495-1.444-.309-.357-.75-.535-1.324-.535-.532 0-.99.194-1.373.583-.382.388-.622.949-.717 1.683h3.909zm1.005 2.792v1.404c-.596.34-1.383.51-2.362.51-1.255 0-2.255-.377-3-1.132-.744-.755-1.116-1.744-1.116-2.968 0-1.297.34-2.316 1.021-3.055.68-.74 1.548-1.11 2.6-1.11 1.033 0 1.852.323 2.458.966.606.644.91 1.572.91 2.784 0 .33-.033.676-.096 1.038h-5.314c.107.702.405 1.239.894 1.611.49.372 1.106.558 1.85.558.862 0 1.58-.202 2.155-.606zm6.605-1.77h-1.212c-.596 0-1.045.116-1.349.35-.303.234-.454.532-.454.894 0 .372.117.664.35.877.235.213.575.32 1.022.32.51 0 .912-.142 1.204-.424.293-.281.44-.651.44-1.108v-.91zm-4.068-2.554V9.325c.627-.361 1.457-.542 2.489-.542 2.116 0 3.175 1.026 3.175 3.08V17h-1.548v-.957c-.415.68-1.143 1.02-2.186 1.02-.766 0-1.38-.22-1.843-.661-.462-.442-.694-1.003-.694-1.684 0-.776.293-1.38.878-1.81.585-.431 1.404-.647 2.457-.647h1.34V11.8c0-.554-.133-.971-.399-1.253-.266-.282-.707-.423-1.324-.423a4.07 4.07 0 0 0-2.345.718zm9.333-1.93v1.42c.394-1 1.101-1.5 2.123-1.5.148 0 .313.016.494.048v1.531a1.885 1.885 0 0 0-.75-.143c-.542 0-.989.24-1.34.718-.351.479-.527 1.048-.527 1.707V17h-1.563V8.91h1.563zm5.01 4.084c.022.82.272 1.492.75 2.019.479.526 1.15.79 2.01.79.639 0 1.235-.176 1.788-.527v1.404c-.521.319-1.186.479-1.995.479-1.265 0-2.276-.4-3.031-1.197-.755-.798-1.133-1.792-1.133-2.984 0-1.16.38-2.151 1.14-2.975.761-.825 1.79-1.237 3.088-1.237.702 0 1.346.149 1.93.447v1.436a3.242 3.242 0 0 0-1.77-.495c-.84 0-1.513.266-2.019.798-.505.532-.758 1.213-.758 2.042zM40.24 5.72v4.579c.458-1 1.293-1.5 2.505-1.5.787 0 1.42.245 1.899.734.479.49.718 1.17.718 2.042V17h-1.564v-5.106c0-.553-.14-.98-.422-1.284-.282-.303-.652-.455-1.11-.455-.531 0-1.002.202-1.411.606-.41.405-.615 1.022-.615 1.851V17h-1.563V5.72h1.563zm14.966 10.02c.596 0 1.096-.253 1.5-.758.404-.506.606-1.157.606-1.955 0-.915-.202-1.62-.606-2.114-.404-.495-.92-.742-1.548-.742-.553 0-1.05.224-1.491.67-.442.447-.662 1.133-.662 2.058 0 .958.212 1.67.638 2.138.425.469.946.703 1.563.703zM53.004 5.72v4.42c.574-.894 1.388-1.341 2.44-1.341 1.022 0 1.857.383 2.506 1.149.649.766.973 1.781.973 3.047 0 1.138-.309 2.109-.925 2.912-.617.803-1.463 1.205-2.537 1.205-1.075 0-1.894-.447-2.457-1.34V17h-1.58V5.72h1.58zm9.908 11.104l-3.223-7.913h1.739l1.005 2.632 1.26 3.415c.096-.32.48-1.458 1.15-3.415l.909-2.632h1.66l-2.92 7.866c-.777 2.074-1.963 3.11-3.559 3.11a2.92 2.92 0 0 1-.734-.079v-1.34c.17.042.351.064.543.064 1.032 0 1.755-.57 2.17-1.708z\"\n                  />\n                  <path\n                    fill=\"#5468FF\"\n                    d=\"M78.988.938h16.594a2.968 2.968 0 0 1 2.966 2.966V20.5a2.967 2.967 0 0 1-2.966 2.964H78.988a2.967 2.967 0 0 1-2.966-2.964V3.897A2.961 2.961 0 0 1 78.988.938z\"\n                  />\n                  <path\n                    fill=\"white\"\n                    d=\"M89.632 5.967v-.772a.978.978 0 0 0-.978-.977h-2.28a.978.978 0 0 0-.978.977v.793c0 .088.082.15.171.13a7.127 7.127 0 0 1 1.984-.28c.65 0 1.295.088 1.917.259.082.02.164-.04.164-.13m-6.248 1.01l-.39-.389a.977.977 0 0 0-1.382 0l-.465.465a.973.973 0 0 0 0 1.38l.383.383c.062.061.15.047.205-.014.226-.307.472-.601.746-.874.281-.28.568-.526.883-.751.068-.042.075-.137.02-.2m4.16 2.453v3.341c0 .096.104.165.192.117l2.97-1.537c.068-.034.089-.117.055-.184a3.695 3.695 0 0 0-3.08-1.866c-.068 0-.136.054-.136.13m0 8.048a4.489 4.489 0 0 1-4.49-4.482 4.488 4.488 0 0 1 4.49-4.482 4.488 4.488 0 0 1 4.489 4.482 4.484 4.484 0 0 1-4.49 4.482m0-10.85a6.363 6.363 0 1 0 0 12.729 6.37 6.37 0 0 0 6.372-6.368 6.358 6.358 0 0 0-6.371-6.36\"\n                  />\n                </g>\n              </svg>\n            </a>\n          </div>\n        </div>\n\n        {searchResultState.items.length > 0 ? (\n          <main>\n            {searchResultState.items.map(\n              ({title, url, summary, breadcrumbs}, i) => (\n                <article key={i} className={styles.searchResultItem}>\n                  <h2 className={styles.searchResultItemHeading}>\n                    <Link to={url} dangerouslySetInnerHTML={{__html: title}} />\n                  </h2>\n\n                  {breadcrumbs.length > 0 && (\n                    <nav aria-label=\"breadcrumbs\">\n                      <ul\n                        className={clsx(\n                          'breadcrumbs',\n                          styles.searchResultItemPath,\n                        )}>\n                        {breadcrumbs.map((html, index) => (\n                          <li\n                            key={index}\n                            className=\"breadcrumbs__item\"\n                            // Developer provided the HTML, so assume it's safe.\n                            // eslint-disable-next-line react/no-danger\n                            dangerouslySetInnerHTML={{__html: html}}\n                          />\n                        ))}\n                      </ul>\n                    </nav>\n                  )}\n\n                  {summary && (\n                    <p\n                      className={styles.searchResultItemSummary}\n                      // Developer provided the HTML, so assume it's safe.\n                      // eslint-disable-next-line react/no-danger\n                      dangerouslySetInnerHTML={{__html: summary}}\n                    />\n                  )}\n                </article>\n              ),\n            )}\n          </main>\n        ) : (\n          [\n            searchQuery && !searchResultState.loading && (\n              <p key=\"no-results\">\n                <Translate\n                  id=\"theme.SearchPage.noResultsText\"\n                  description=\"The paragraph for empty search result\">\n                  No results were found\n                </Translate>\n              </p>\n            ),\n            !!searchResultState.loading && (\n              <div key=\"spinner\" className={styles.loadingSpinner} />\n            ),\n          ]\n        )}\n\n        {searchResultState.hasMore && (\n          <div className={styles.loader} ref={setLoaderRef}>\n            <Translate\n              id=\"theme.SearchPage.fetchingNewResults\"\n              description=\"The paragraph for fetching new search results\">\n              Fetching new results...\n            </Translate>\n          </div>\n        )}\n      </div>\n    </Layout>\n  );\n}\nexport default function SearchPage() {\n  return (\n    <HtmlClassNameProvider className=\"search-page-wrapper\">\n      <SearchPageContent />\n    </HtmlClassNameProvider>\n  );\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version.js');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function() {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function(parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute] ?\n      [valueAsString] :\n      refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function(v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function(v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function(memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function(value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        memo[key] = facetList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function(el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function(currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  var self = this;\n  Object.keys(params).forEach(function(paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function(partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity'\n  ];\n\n  numberKeys.forEach(function(k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function(value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function(attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function(v) {\n          if (Array.isArray(v)) {\n            return v.map(function(vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function(facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function(currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n      'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n      'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n      ' is probably an error, if this is really what you want, you have to first' +\n      ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      )\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function(attribute, operator, v) {\n    var value = valToNumber(v);\n\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function(value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function(memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n\n        operators = operators || {};\n        Object.keys(operators).forEach(function(operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function(value) {\n            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        memo[key] = operatorList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function(f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function(t) {\n        return t !== tag;\n      })\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet +\n      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 && (\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0] === value ||\n      // remove a parent refinement of the current refinement:\n      //  - refinement was 'beer > IPA > Flying dog'\n      //  - call is toggleRefine('beer > IPA')\n      //  - refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0\n    );\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function(facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function(facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function(facet) { return facet.name; }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function(facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    );\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function(f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n\n    'facets',\n    'disjunctiveFacets',\n    'facetsRefinements',\n    'hierarchicalFacets',\n    'facetsExcludes',\n\n    'disjunctiveFacetsRefinements',\n    'numericRefinements',\n    'tagRefinements',\n    'hierarchicalFacetsRefinements'\n  ],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    var self = this;\n    Object.keys(this).forEach(function(paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function(acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(\n      function(previous, key) {\n        var isPreviousValueDefined = previous[key] !== undefined;\n        var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n        if (isPreviousValueDefined && !isNextValueDefined) {\n          return omit(previous, [key]);\n        }\n\n        if (isNextValueDefined) {\n          previous[key] = nextWithNumbers[key];\n        }\n\n        return previous;\n      },\n      previousPlainObject\n    );\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function(hierarchicalFacetName) {\n    return find(\n      this.hierarchicalFacets,\n      function(f) {\n        return f.name === hierarchicalFacetName;\n      }\n    );\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function(part) {\n      return part.trim();\n    });\n  },\n\n  toString: function() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(\n      hierarchicalFacet\n    );\n    var hierarchicalRootPath = state._getHierarchicalRootPath(\n      hierarchicalFacet\n    );\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(\n      hierarchicalFacet\n    );\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function(facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function(subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function(facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function(tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function(tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            unescapeFacetValue(currentRefinement),\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function(val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(\n    hierarchicalFacet\n  ) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n/*eslint-disable */\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n/*eslint-enable */\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function(key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  Object.keys(options || {}).forEach(function(key) {\n    self[key] = options[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n  this.processingTimeMS = results.reduce(function(sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function(facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function(disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function(refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(unescapeFacetValue(refinementValue)) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some parent level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    results.slice(nextDisjunctiveResult).forEach(function(result) {\n      var facets = result && result.facets\n        ? result.facets\n        : {};\n\n      Object.keys(facets).forEach(function(dfacet) {\n        var facetResults = facets[dfacet];\n        var position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n        // then the disjunctive values will be `beers` (count: 100),\n        // but we do not want to display\n        //   | beers (100)\n        //     > IPA (5)\n        // We want\n        //   | beers (5)\n        //     > IPA (5)\n        var defaultData = {};\n\n        if (currentRefinement.length > 0) {\n          var root = currentRefinement[0].split(separator)[0];\n          defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n          defaultData,\n          facetResults,\n          self.hierarchicalFacets[position][attributeIndex].data\n        );\n      });\n\n      nextDisjunctiveResult++;\n    });\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function(facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function(facetValue) {\n      self.facets[position] = self.facets[position] || {name: facetName};\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function(name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n */\nfunction recSort(sortFn, node, names, level) {\n  level = level || 0;\n\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function(childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({data: sortedChildren}, node);\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array}\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n\n  var order = facetOrdering.order || [];\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function(acc, name, i) {\n    acc[name] = i;\n    return acc;\n  }, {});\n\n  facetValues.forEach(function(item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    if (reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else {\n      remainingFacets.push(item);\n    }\n  });\n\n  orderedFacets = orderedFacets.filter(function(facet) {\n    return facet;\n  });\n\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [['path', 'name'], ['asc', 'asc']];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n\n  return orderedFacets.concat(\n    orderBy(remainingFacets, ordering[0], ordering[1])\n  );\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering=}\n */\nfunction getFacetOrdering(results, attribute) {\n  return (\n    results.renderingContent &&\n    results.renderingContent.facetOrdering &&\n    results.renderingContent.facetOrdering.values &&\n    results.renderingContent.facetOrdering.values[attribute]\n  );\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function(attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy)\n  });\n\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n\n  return recSort(function(data, facetName) {\n    if (options.facetOrdering) {\n      var facetOrdering = getFacetOrdering(results, facetName);\n      if (Boolean(facetOrdering)) {\n        return sortViaFacetOrdering(data, facetOrdering);\n      }\n    }\n\n    if (Array.isArray(options.sortBy)) {\n      var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n      return orderBy(data, order[0], order[1]);\n    } else if (typeof options.sortBy === 'function') {\n      return vanillaSortFn(options.sortBy, data);\n    }\n    throw new Error(\n      'options.sortBy is optional but if defined it must be ' +\n        'either an array of string (predicates) or a sorting function'\n    );\n  }, facetValues, attributes);\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function(attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function(facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function() {\n  var state = this._state;\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function(attributeName) {\n    state.facetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function(attributeName) {\n    state.facetsExcludes[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function(attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function(attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n\n\n  Object.keys(state.numericRefinements).forEach(function(attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function(operator) {\n      operators[operator].forEach(function(value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function(name) {\n    res.push({type: 'tag', attributeName: '_tags', name: name});\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function(f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function(facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function(intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet && find(intermediateFacet.data, function(f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;\n","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\n\nvar version = require('./version');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function() {\n  this._search({onlyWithDerivedHelpers: false});\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function() {\n  this._search({onlyWithDerivedHelpers: true});\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function() {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function(content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function(err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n /**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n */\nAlgoliaSearchHelper.prototype.findAnswers = function(options) {\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText' // FIXME remove this line once the engine is fixed.\n      ])\n    }\n  );\n\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  var clientHasInitIndex = typeof this.client.initIndex === 'function';\n  if (\n    !clientHasSFFV &&\n    !clientHasInitIndex &&\n    typeof this.client.search !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n\n  this._currentNbQueries++;\n  var self = this;\n  var searchForFacetValuesPromise;\n  // newer algoliasearch ^3.27.1 - ~4.0.0\n  if (clientHasSFFV) {\n    searchForFacetValuesPromise = this.client.searchForFacetValues([\n      {indexName: state.index, params: algoliaQuery}\n    ]);\n    // algoliasearch < 3.27.1\n  } else if (clientHasInitIndex) {\n    searchForFacetValuesPromise = this.client\n      .initIndex(state.index)\n      .searchForFacetValues(algoliaQuery);\n    // algoliasearch ~5.0.0\n  } else {\n    // @MAJOR only use client.search\n    delete algoliaQuery.facetName;\n    searchForFacetValuesPromise = this.client\n      .search([\n        {\n          type: 'facet',\n          facet: facet,\n          indexName: state.index,\n          params: algoliaQuery\n        }\n      ])\n      .then(function processResponse(response) {\n        return response.results[0];\n      });\n  }\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    content = Array.isArray(content) ? content[0] : content;\n\n    content.facetHits.forEach(function(f) {\n      f.escapedValue = escapeFacetValue(f.value);\n      f.isRefined = isDisjunctive\n        ? state.isDisjunctiveFacetRefined(facet, f.escapedValue)\n        : state.isFacetRefined(facet, f.escapedValue);\n    });\n\n    return content;\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function(q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function(name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function() {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function() {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function() {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function() {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function() {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function() {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function() {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function(name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function(newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype.hasTag = function(tag) {\n  return this.state.isTagRefined(tag);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function() {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function() {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function() {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function(facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n\n    disjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function(operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function(options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function(derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function(s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {\n  return query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {\n  return this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function(event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.clearCache = function() {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.setClient = function(newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\nAlgoliaSearchHelper.prototype.getClient = function() {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\nAlgoliaSearchHelper.prototype.derive = function(fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function() {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function(acc, source) {\n    Object.keys(Object(source)).forEach(function(key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns any\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns any\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return value.replace(/^\\\\-/, '-');\n}\n\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function(value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (\n      !Object.prototype.hasOwnProperty.call(source, key) ||\n      key === '__proto__'\n    ) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (\n      isObjectOrArrayOrFunction(targetVal) &&\n      isObjectOrArrayOrFunction(sourceVal)\n    ) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function(value, index) {\n    return {\n      criteria: iteratees.map(function(iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function(res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nfunction sortObject(obj) {\n  return Object.keys(obj)\n    .sort(function(a, b) {\n      return a.localeCompare(b);\n    })\n    .reduce(function(acc, curr) {\n      acc[curr] = obj[curr];\n      return acc;\n    }, {});\n}\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function(refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // More to get the parent levels of the hierarchical facets when refined\n    state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n      // If we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get all parent values\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        // We generate a map of the filters we will use for our facet values queries\n        var filtersMap = currentRefinement[0].split(separator).slice(0, -1).reduce(\n          function createFiltersMap(map, segment, level) {\n            return map.concat({\n              attribute: hierarchicalFacet.attributes[level],\n              value: level === 0\n                ? segment\n                : [map[map.length - 1].value, segment].join(separator)\n            });\n          }\n        , []);\n\n        filtersMap.forEach(function(filter, level) {\n          var params = requestBuilder._getDisjunctiveFacetSearchParams(\n            state,\n            filter.attribute,\n            level === 0\n          );\n\n          var parent = filtersMap[level - 1];\n          params.facetFilters = level > 0 ? [parent.attribute + ':' + parent.value] : undefined;\n\n          queries.push({indexName: index, params: params});\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function(state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets.indexOf('*') > -1 ? ['*'] : facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 0,\n      page: 0,\n      analytics: false,\n      clickAnalytics: false\n    };\n\n    if (tagFilters.length > 0) {\n      additionalParams.tagFilters = tagFilters;\n    }\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n        state,\n        hierarchicalFacet,\n        hierarchicalRootLevel\n      );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return sortObject(merge({}, state.getQueryParams(), additionalParams));\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function(attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function(value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function(v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function(facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function(facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function(facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n\n      facetValues.forEach(function(facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n\n      facetFilters.push(orFilters);\n    });\n\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function(facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||\n          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function(state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      }, out);\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?\n      state.clearRefinements(facetName) :\n      state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return sortObject(merge(\n      {},\n      requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n      searchForFacetSearchParameters\n    ));\n  }\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\nmodule.exports = '3.10.0';\n","/*! algoliasearch-lite.umd.js | 4.13.1 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).algoliasearch=t()}(this,(function(){\"use strict\";function e(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function t(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function r(r){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?t(Object(o),!0).forEach((function(t){e(r,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(o)):t(Object(o)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(o,e))}))}return r}function n(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){if(!(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e)))return;var r=[],n=!0,o=!1,a=void 0;try{for(var u,i=e[Symbol.iterator]();!(n=(u=i.next()).done)&&(r.push(u.value),!t||r.length!==t);n=!0);}catch(e){o=!0,a=e}finally{try{n||null==i.return||i.return()}finally{if(o)throw a}}return r}(e,t)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function a(e){return function(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}(e)||function(e){if(Symbol.iterator in Object(e)||\"[object Arguments]\"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function u(e){var t,r=\"algoliasearch-client-js-\".concat(e.key),n=function(){return void 0===t&&(t=e.localStorage||window.localStorage),t},a=function(){return JSON.parse(n().getItem(r)||\"{}\")};return{get:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return Promise.resolve().then((function(){var r=JSON.stringify(e),n=a()[r];return Promise.all([n||t(),void 0!==n])})).then((function(e){var t=o(e,2),n=t[0],a=t[1];return Promise.all([n,a||r.miss(n)])})).then((function(e){return o(e,1)[0]}))},set:function(e,t){return Promise.resolve().then((function(){var o=a();return o[JSON.stringify(e)]=t,n().setItem(r,JSON.stringify(o)),t}))},delete:function(e){return Promise.resolve().then((function(){var t=a();delete t[JSON.stringify(e)],n().setItem(r,JSON.stringify(t))}))},clear:function(){return Promise.resolve().then((function(){n().removeItem(r)}))}}}function i(e){var t=a(e.caches),r=t.shift();return void 0===r?{get:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},n=t();return n.then((function(e){return Promise.all([e,r.miss(e)])})).then((function(e){return o(e,1)[0]}))},set:function(e,t){return Promise.resolve(t)},delete:function(e){return Promise.resolve()},clear:function(){return Promise.resolve()}}:{get:function(e,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return r.get(e,n,o).catch((function(){return i({caches:t}).get(e,n,o)}))},set:function(e,n){return r.set(e,n).catch((function(){return i({caches:t}).set(e,n)}))},delete:function(e){return r.delete(e).catch((function(){return i({caches:t}).delete(e)}))},clear:function(){return r.clear().catch((function(){return i({caches:t}).clear()}))}}}function s(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{serializable:!0},t={};return{get:function(r,n){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},a=JSON.stringify(r);if(a in t)return Promise.resolve(e.serializable?JSON.parse(t[a]):t[a]);var u=n(),i=o&&o.miss||function(){return Promise.resolve()};return u.then((function(e){return i(e)})).then((function(){return u}))},set:function(r,n){return t[JSON.stringify(r)]=e.serializable?JSON.stringify(n):n,Promise.resolve(n)},delete:function(e){return delete t[JSON.stringify(e)],Promise.resolve()},clear:function(){return t={},Promise.resolve()}}}function c(e){for(var t=e.length-1;t>0;t--){var r=Math.floor(Math.random()*(t+1)),n=e[t];e[t]=e[r],e[r]=n}return e}function l(e,t){return t?(Object.keys(t).forEach((function(r){e[r]=t[r](e)})),e):e}function f(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var o=0;return e.replace(/%s/g,(function(){return encodeURIComponent(r[o++])}))}var h={WithinQueryParameters:0,WithinHeaders:1};function d(e,t){var r=e||{},n=r.data||{};return Object.keys(r).forEach((function(e){-1===[\"timeout\",\"headers\",\"queryParameters\",\"data\",\"cacheable\"].indexOf(e)&&(n[e]=r[e])})),{data:Object.entries(n).length>0?n:void 0,timeout:r.timeout||t,headers:r.headers||{},queryParameters:r.queryParameters||{},cacheable:r.cacheable}}var m={Read:1,Write:2,Any:3},p=1,v=2,y=3;function g(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:p;return r(r({},e),{},{status:t,lastUpdate:Date.now()})}function b(e){return\"string\"==typeof e?{protocol:\"https\",url:e,accept:m.Any}:{protocol:e.protocol||\"https\",url:e.url,accept:e.accept||m.Any}}var O=\"GET\",P=\"POST\";function q(e,t){return Promise.all(t.map((function(t){return e.get(t,(function(){return Promise.resolve(g(t))}))}))).then((function(e){var r=e.filter((function(e){return function(e){return e.status===p||Date.now()-e.lastUpdate>12e4}(e)})),n=e.filter((function(e){return function(e){return e.status===y&&Date.now()-e.lastUpdate<=12e4}(e)})),o=[].concat(a(r),a(n));return{getTimeout:function(e,t){return(0===n.length&&0===e?1:n.length+3+e)*t},statelessHosts:o.length>0?o.map((function(e){return b(e)})):t}}))}function w(e,t,n,o){var u=[],i=function(e,t){if(e.method===O||void 0===e.data&&void 0===t.data)return;var n=Array.isArray(e.data)?e.data:r(r({},e.data),t.data);return JSON.stringify(n)}(n,o),s=function(e,t){var n=r(r({},e.headers),t.headers),o={};return Object.keys(n).forEach((function(e){var t=n[e];o[e.toLowerCase()]=t})),o}(e,o),c=n.method,l=n.method!==O?{}:r(r({},n.data),o.data),f=r(r(r({\"x-algolia-agent\":e.userAgent.value},e.queryParameters),l),o.queryParameters),h=0,d=function t(r,a){var l=r.pop();if(void 0===l)throw{name:\"RetryError\",message:\"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",transporterStackTrace:A(u)};var d={data:i,headers:s,method:c,url:S(l,n.path,f),connectTimeout:a(h,e.timeouts.connect),responseTimeout:a(h,o.timeout)},m=function(e){var t={request:d,response:e,host:l,triesLeft:r.length};return u.push(t),t},p={onSuccess:function(e){return function(e){try{return JSON.parse(e.content)}catch(t){throw function(e,t){return{name:\"DeserializationError\",message:e,response:t}}(t.message,e)}}(e)},onRetry:function(n){var o=m(n);return n.isTimedOut&&h++,Promise.all([e.logger.info(\"Retryable failure\",x(o)),e.hostsCache.set(l,g(l,n.isTimedOut?y:v))]).then((function(){return t(r,a)}))},onFail:function(e){throw m(e),function(e,t){var r=e.content,n=e.status,o=r;try{o=JSON.parse(r).message}catch(e){}return function(e,t,r){return{name:\"ApiError\",message:e,status:t,transporterStackTrace:r}}(o,n,t)}(e,A(u))}};return e.requester.send(d).then((function(e){return function(e,t){return function(e){var t=e.status;return e.isTimedOut||function(e){var t=e.isTimedOut,r=e.status;return!t&&0==~~r}(e)||2!=~~(t/100)&&4!=~~(t/100)}(e)?t.onRetry(e):2==~~(e.status/100)?t.onSuccess(e):t.onFail(e)}(e,p)}))};return q(e.hostsCache,t).then((function(e){return d(a(e.statelessHosts).reverse(),e.getTimeout)}))}function j(e){var t={value:\"Algolia for JavaScript (\".concat(e,\")\"),add:function(e){var r=\"; \".concat(e.segment).concat(void 0!==e.version?\" (\".concat(e.version,\")\"):\"\");return-1===t.value.indexOf(r)&&(t.value=\"\".concat(t.value).concat(r)),t}};return t}function S(e,t,r){var n=T(r),o=\"\".concat(e.protocol,\"://\").concat(e.url,\"/\").concat(\"/\"===t.charAt(0)?t.substr(1):t);return n.length&&(o+=\"?\".concat(n)),o}function T(e){return Object.keys(e).map((function(t){return f(\"%s=%s\",t,(r=e[t],\"[object Object]\"===Object.prototype.toString.call(r)||\"[object Array]\"===Object.prototype.toString.call(r)?JSON.stringify(e[t]):e[t]));var r})).join(\"&\")}function A(e){return e.map((function(e){return x(e)}))}function x(e){var t=e.request.headers[\"x-algolia-api-key\"]?{\"x-algolia-api-key\":\"*****\"}:{};return r(r({},e),{},{request:r(r({},e.request),{},{headers:r(r({},e.request.headers),t)})})}var N=function(e){var t=e.appId,n=function(e,t,r){var n={\"x-algolia-api-key\":r,\"x-algolia-application-id\":t};return{headers:function(){return e===h.WithinHeaders?n:{}},queryParameters:function(){return e===h.WithinQueryParameters?n:{}}}}(void 0!==e.authMode?e.authMode:h.WithinHeaders,t,e.apiKey),a=function(e){var t=e.hostsCache,r=e.logger,n=e.requester,a=e.requestsCache,u=e.responsesCache,i=e.timeouts,s=e.userAgent,c=e.hosts,l=e.queryParameters,f={hostsCache:t,logger:r,requester:n,requestsCache:a,responsesCache:u,timeouts:i,userAgent:s,headers:e.headers,queryParameters:l,hosts:c.map((function(e){return b(e)})),read:function(e,t){var r=d(t,f.timeouts.read),n=function(){return w(f,f.hosts.filter((function(e){return 0!=(e.accept&m.Read)})),e,r)};if(!0!==(void 0!==r.cacheable?r.cacheable:e.cacheable))return n();var a={request:e,mappedRequestOptions:r,transporter:{queryParameters:f.queryParameters,headers:f.headers}};return f.responsesCache.get(a,(function(){return f.requestsCache.get(a,(function(){return f.requestsCache.set(a,n()).then((function(e){return Promise.all([f.requestsCache.delete(a),e])}),(function(e){return Promise.all([f.requestsCache.delete(a),Promise.reject(e)])})).then((function(e){var t=o(e,2);t[0];return t[1]}))}))}),{miss:function(e){return f.responsesCache.set(a,e)}})},write:function(e,t){return w(f,f.hosts.filter((function(e){return 0!=(e.accept&m.Write)})),e,d(t,f.timeouts.write))}};return f}(r(r({hosts:[{url:\"\".concat(t,\"-dsn.algolia.net\"),accept:m.Read},{url:\"\".concat(t,\".algolia.net\"),accept:m.Write}].concat(c([{url:\"\".concat(t,\"-1.algolianet.com\")},{url:\"\".concat(t,\"-2.algolianet.com\")},{url:\"\".concat(t,\"-3.algolianet.com\")}]))},e),{},{headers:r(r(r({},n.headers()),{\"content-type\":\"application/x-www-form-urlencoded\"}),e.headers),queryParameters:r(r({},n.queryParameters()),e.queryParameters)}));return l({transporter:a,appId:t,addAlgoliaAgent:function(e,t){a.userAgent.add({segment:e,version:t})},clearCache:function(){return Promise.all([a.requestsCache.clear(),a.responsesCache.clear()]).then((function(){}))}},e.methods)},C=function(e){return function(t,r){return t.method===O?e.transporter.read(t,r):e.transporter.write(t,r)}},k=function(e){return function(t){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={transporter:e.transporter,appId:e.appId,indexName:t};return l(n,r.methods)}},J=function(e){return function(t,n){var o=t.map((function(e){return r(r({},e),{},{params:T(e.params||{})})}));return e.transporter.read({method:P,path:\"1/indexes/*/queries\",data:{requests:o},cacheable:!0},n)}},E=function(e){return function(t,o){return Promise.all(t.map((function(t){var a=t.params,u=a.facetName,i=a.facetQuery,s=n(a,[\"facetName\",\"facetQuery\"]);return k(e)(t.indexName,{methods:{searchForFacetValues:R}}).searchForFacetValues(u,i,r(r({},o),s))})))}},I=function(e){return function(t,r,n){return e.transporter.read({method:P,path:f(\"1/answers/%s/prediction\",e.indexName),data:{query:t,queryLanguages:r},cacheable:!0},n)}},F=function(e){return function(t,r){return e.transporter.read({method:P,path:f(\"1/indexes/%s/query\",e.indexName),data:{query:t},cacheable:!0},r)}},R=function(e){return function(t,r,n){return e.transporter.read({method:P,path:f(\"1/indexes/%s/facets/%s/query\",e.indexName,t),data:{facetQuery:r},cacheable:!0},n)}},D=1,W=2,H=3;function Q(e,t,n){var o,a={appId:e,apiKey:t,timeouts:{connect:1,read:2,write:30},requester:{send:function(e){return new Promise((function(t){var r=new XMLHttpRequest;r.open(e.method,e.url,!0),Object.keys(e.headers).forEach((function(t){return r.setRequestHeader(t,e.headers[t])}));var n,o=function(e,n){return setTimeout((function(){r.abort(),t({status:0,content:n,isTimedOut:!0})}),1e3*e)},a=o(e.connectTimeout,\"Connection timeout\");r.onreadystatechange=function(){r.readyState>r.OPENED&&void 0===n&&(clearTimeout(a),n=o(e.responseTimeout,\"Socket timeout\"))},r.onerror=function(){0===r.status&&(clearTimeout(a),clearTimeout(n),t({content:r.responseText||\"Network request failed\",status:r.status,isTimedOut:!1}))},r.onload=function(){clearTimeout(a),clearTimeout(n),t({content:r.responseText,status:r.status,isTimedOut:!1})},r.send(e.data)}))}},logger:(o=H,{debug:function(e,t){return D>=o&&console.debug(e,t),Promise.resolve()},info:function(e,t){return W>=o&&console.info(e,t),Promise.resolve()},error:function(e,t){return console.error(e,t),Promise.resolve()}}),responsesCache:s(),requestsCache:s({serializable:!1}),hostsCache:i({caches:[u({key:\"\".concat(\"4.13.1\",\"-\").concat(e)}),s()]}),userAgent:j(\"4.13.1\").add({segment:\"Browser\",version:\"lite\"}),authMode:h.WithinQueryParameters};return N(r(r(r({},a),n),{},{methods:{search:J,searchForFacetValues:E,multipleQueries:J,multipleSearchForFacetValues:E,customRequest:C,initIndex:function(e){return function(t){return k(e)(t,{methods:{search:F,searchForFacetValues:R,findAnswers:I}})}}}}))}return Q.version=\"4.13.1\",Q}));\n"],"names":["OrderedPluralForms","sortPluralForms","pluralForms","filter","pf","includes","EnglishPluralForms","locale","select","count","useLocalePluralForms","currentLocale","useDocusaurusContext","i18n","useMemo","pluralRules","Intl","PluralRules","resolvedOptions","pluralCategories","err","console","error","message","usePluralForm","localePluralForm","selectMessage","pluralMessages","localePluralForms","parts","split","length","join","pluralForm","pluralFormIndex","indexOf","Math","min","selectPluralMessage","SearchVersionSelectList","docsSearchVersionsHelpers","versionedPluginEntries","Object","entries","allDocsData","versions","className","clsx","styles","map","pluginId","docsData","labelPrefix","key","onChange","e","setSearchVersion","target","value","defaultValue","searchVersions","version","i","label","name","SearchPageContent","setSearchVersions","versioningEnabled","themeConfig","siteConfig","algolia","appId","apiKey","indexName","externalUrlRegex","documentsFoundPlural","translate","id","description","useAllDocsData","useState","reduce","acc","pluginData","values","some","searchVersion","s","useSearchPage","searchQuery","setSearchQuery","initialSearchResultState","items","query","totalResults","totalPages","lastPage","hasMore","loading","useReducer","prevState","data","type","concat","searchResultState","searchResultStateDispatcher","algoliaClient","algoliaSearch","algoliaHelper","algoliaSearchHelper","hitsPerPage","advancedSyntax","disjunctiveFacets","on","results","hits","page","nbHits","nbPages","Array","isArray","sanitizeValue","replace","url","hierarchy","_highlightResult","_snippetResult","snippet","parsedURL","URL","titles","keys","title","pop","isRegexpStringMatch","href","pathname","hash","summary","content","breadcrumbs","loaderRef","setLoaderRef","prevY","useRef","observer","ExecutionEnvironment","IntersectionObserver","isIntersecting","currentY","boundingClientRect","y","current","threshold","getTitle","makeSearch","useEvent","addDisjunctiveFacetRefinement","forEach","setQuery","setPage","search","useEffect","currentObserver","observe","unobserve","setTimeout","Layout","Head","useTitleFormatter","property","onSubmit","preventDefault","placeholder","autoComplete","autoFocus","rel","viewBox","fill","d","Link","to","dangerouslySetInnerHTML","__html","html","index","Translate","ref","SearchPage","EventEmitter","this","_events","_maxListeners","undefined","isFunction","arg","isObject","isUndefined","module","exports","prototype","defaultMaxListeners","setMaxListeners","n","isNaN","TypeError","emit","er","handler","len","args","listeners","arguments","Error","context","call","slice","apply","addListener","listener","m","newListener","push","warned","trace","once","fired","g","removeListener","list","position","splice","removeAllListeners","listenerCount","evlistener","emitter","AlgoliaSearchHelper","SearchParameters","SearchResults","algoliasearchHelper","client","opts","DerivedHelper","mainHelper","fn","main","lastResults","inherits","detach","detachDerivedHelper","getModifiedState","parameters","defaultsPure","omit","objectHasKeys","lib","addRefinement","refinementList","attribute","isRefined","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","v","f","toggleRefinement","refinementType","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","merge","intersection","find","valToNumber","isValidUserToken","RefinementList","isEqualNumericRefinement","a","b","every","el","newParameters","params","_parseNumbers","userToken","warn","facets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","self","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","k","parsedValue","parseFloat","insideBoundingBox","geoRect","operators","operator","parsedValues","vPrime","make","instance","facet","rootPath","currentRefinement","getHierarchicalRefinement","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","tagFilters","numericFilters","constructor","patch","_clearNumericRefinements","setQueryParameters","clearTags","setIndex","newQuery","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","isNumericRefined","getConjunctiveRefinements","facetName","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","paramValue","op","val","getNumericRefinements","getNumericRefinement","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","addExcludeRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","t","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","path","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","array","searchedValue","isAttributeValueDefined","currentValue","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","resetPage","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","part","trim","toString","JSON","stringify","state","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","level","subtree","picked","facetValue","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","escapedValue","escapeFacetValue","format","unescapeFacetValue","generateHierarchicalTree","fv","compact","findIndex","formatSort","getIndices","attributes","indices","idx","assignFacetStats","dest","facetStats","stats","options","mainSubResponse","_rawResults","processingTimeMS","sum","result","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","attributeIndex","dataFromMainRequest","refinedFacet","defaultData","root","excludes","_state","recSort","sortFn","node","names","children","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","attributeName","resultsFacets","getFacetByName","predicate","DEFAULT_SORT","getFacetValues","facetValues","isExcluded","extractNormalizedFacetValues","facetOrdering","renderingContent","getFacetOrdering","Boolean","orderedFacets","remainingFacets","reverseOrder","order","item","ordering","sortRemainingBy","sortViaFacetOrdering","sort","vanillaSortFn","getFacetStats","getRefinements","res","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","requestBuilder","addAlgoliaAgent","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","_getHitsSearchParams","searchOnce","cb","tempState","queries","_getQueries","then","_originalResponse","catch","findAnswers","derivedHelper","Promise","resolve","derivedState","attributesForPrediction","errorMessage","initIndex","queryLanguages","searchForFacetValues","maxFacetHits","userState","clientHasSFFV","clientHasInitIndex","isDisjunctive","algoliaQuery","getSearchForFacetQuery","searchForFacetValuesPromise","response","facetHits","q","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","r","states","mainQueries","queriesCount","helper","derivedQueries","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","specificResults","formattedResponse","containsRefinement","facetFilters","_hasDisjunctiveRefinements","disjunctiveRefinements","event","clearCache","newClient","getClient","derive","pos","hasPendingRequests","sources","reduceRight","source","String","comparator","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","ctor","superCtor","create","enumerable","writable","configurable","arr1","arr2","isObjectOrArrayOrFunction","_merge","hasOwnProperty","sourceVal","targetVal","l","obj","excluded","sourceKeys","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","collection","iteratees","orders","criteria","iteratee","object","sortObject","localeCompare","curr","_getDisjunctiveFacetSearchParams","filtersMap","segment","_getHitsHierarchicalFacetsAttributes","_getFacetFilters","_getNumericFilters","_getTagFilters","additionalParams","hierarchicalRootLevel","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributeToRefine","attributesIndex","allAttributes","hierarchicalRefinement","newAttributes","rootLevel","parentLevel","stateForSearchForFacetValues","searchForFacetSearchParameters","facetQuery","test","defineProperty","getOwnPropertySymbols","getOwnPropertyDescriptor","o","getOwnPropertyDescriptors","defineProperties","propertyIsEnumerable","Symbol","iterator","u","next","done","return","from","localStorage","window","parse","getItem","get","miss","all","set","setItem","delete","clear","removeItem","caches","shift","serializable","c","floor","random","encodeURIComponent","h","WithinQueryParameters","WithinHeaders","timeout","headers","queryParameters","cacheable","Read","Write","Any","p","status","lastUpdate","Date","now","protocol","accept","O","P","getTimeout","statelessHosts","w","method","toLowerCase","userAgent","transporterStackTrace","A","S","connectTimeout","timeouts","connect","responseTimeout","request","host","triesLeft","onSuccess","onRetry","isTimedOut","logger","info","x","hostsCache","onFail","requester","send","reverse","j","add","T","charAt","substr","N","authMode","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","methods","C","J","requests","E","R","I","F","D","W","H","Q","XMLHttpRequest","open","setRequestHeader","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","multipleQueries","multipleSearchForFacetValues","customRequest"],"sourceRoot":""}